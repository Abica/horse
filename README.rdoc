= What is this?
Horse is a lightweight run loop built for executing delayed functions over time to simplify tasks like custom
animation.

Jobs are processed every frame in a throttled RAF loop with wormhole patching. Unless paused or canceled, jobs
begin running after the specified delay has elapsed.

= Examples
If autostart is not passed when adding a job, you must call .start() directly on the job before the timers will
begin running.

  fps = 60 # default

  # Horse is a singleton, so subsequent calls receive initial instance
  horse = new Horse(fps)

  duration  = 10   # in seconds, default is -1 which means run forever
  delay     = 5    # in seconds
  autostart = false # default is true

  # this job will run as soon as the horse instance is started and will
  # print the current time in miliseconds out every frame for 10 seconds
  tickerJob = horse.addJob
    delay: delay
    duration: duration
    work: (dt, frameTime, frameIndex) ->
      $el = $(".current-time")
      $el.text +(new Date)


  colors = ["red", "green", "blue"]
  all_colors = colors.join(" ")

  # this job will not autostart, so we must call .start() on it if we want it
  # to begin running
  colorCyclingJob = horse.addJob
    autostart: false
    duration: duration
    work: (dt, frameTime, frameIndex) ->
      $el = $("div")
      $el.removeClass all_colors
      $el.addClass colors[frameIndex % colors.length]

  # at this point tickerJob will start processing
  horse.start()

  colorCyclingJob.start()

  # if using the defaults, you can pass the work function as the only argument
  translateJob = horse.addJob ->
    for bullet in bullets
      bullet.translateY bullet.speed


  # autostarts, runs forever and just pulses between colors in a pretty disco light fashion
  horse.addJob (dt, frameTime, frameIndex) ->
    $el = $("div")
    max = 255
    [r, g, b] = [max - (frameIndex % max), Math.floor(frameTime % max), frameIndex % max]
    $el.css "background", "rgb(#{r}, #{g}, #{b})"

